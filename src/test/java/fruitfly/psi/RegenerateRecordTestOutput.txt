package fruitfly.psi;

/** record comment */
public record RegenerateRecordTestInput(
  // note that the type of field 1 has changed
  int field1,
  // and this field is added
  String field2
) {
  /* top body comment */

    public void userMiddleMethod(){
    // simulates a method the user added by hand after instance methods but
    // before the nested class
  }

    public void userBottomMethod(){
    // simulates a method that the user added at the bottom of the record
  }
  // bottom body comment

    /**
     * @return a new instance of the {@link Builder}
     */
    public static Builder builder() {
        return new Builder();
    }

    /**
     * @return a new instance of the {@link Builder} initialized with all values of this
     */
    public Builder but() {
        return new Builder().field1(field1).field2(field2);
    }

    /**
     * Builder for {@link RegenerateRecordTestInput}.
     */
    public static class Builder {
        private int field1;
        private String field2;

        public Builder field1(int field1) {
            this.field1 = field1;
            return this;
        }

        public Builder field2(String field2) {
            this.field2 = field2;
            return this;
        }

        /**
         * @return a new instance of {@link RegenerateRecordTestInput} initialized with the values set on this builder
         */
        public RegenerateRecordTestInput build() {
            return new RegenerateRecordTestInput(this.field1, this.field2);
        }
    }
}
